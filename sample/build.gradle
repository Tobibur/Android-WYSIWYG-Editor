apply plugin: 'com.android.application'
android {
    signingConfigs {
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('/Users/irshad/Documents/pet/Android-WYSIWYG-Editor/debug.keystore')
            storePassword 'android'
        }
    }
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.github.irshulx.wysiwyg_editor"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 9
        versionName "3.0.3"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

tasks.withType(Javadoc).all {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':laser-native-editor')
    testImplementation 'junit:junit:4.12'
    // (v4.5)
    // (v3,2015)
    // (v2.0.7)
    // (v2.0.0)
    // (v1.2.65)
    // (latest)
    // (v2.0)
    // (v1.0.0)
    // (v2.0.1)
    //Optional: see how to use the utility.
    //Optional: see how to use the utility.
    implementation('com.weiwangcn.betterspinner:library:1.1.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation project(':laser-native-editor')
    implementation 'com.github.duanhong169:colorpicker:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //  compile 'com.github.irshulx:laser-native-editor:2.0.0'
    // implementation 'com.github.irshulx:laser-native-editor:2.2.8'
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$supportLibVersion"
                }
            }
        }
    }
}
